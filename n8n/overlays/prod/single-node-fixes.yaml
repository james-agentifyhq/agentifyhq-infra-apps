# Single-node cluster fixes for n8n production
# These patches fix issues for running production overlay on single-node K3s

# Fix 1: Correct postgres hostname - StatefulSet name becomes "postgres-prod" but service name remains "postgres"
# Fix 2: Remove hard anti-affinity requirement
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: n8n
spec:
  # Reduce to 1 replica for single node
  replicas: 1

  selector:
    matchLabels:
      app.kubernetes.io/name: n8n
      app.kubernetes.io/component: workflow-automation

  template:
    spec:
      # Fix PostgreSQL hostname in init container and override volume permissions
      initContainers:
      - name: volume-permissions
        image: busybox:1.36
        command:
        - sh
        - -c
        - touch /data/.access_test && rm /data/.access_test
        volumeMounts:
        - name: n8n-data
          mountPath: /data
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
              - ALL
      - name: wait-for-postgres
        image: busybox:1.36
        command:
        - sh
        - -c
        - |
          echo "=== PostgreSQL Connection Debug ==="
          echo "Target host: postgres-prod.n8n-prod.svc.cluster.local (full DNS name)"
          echo "Target port: 5432"
          echo "Note: Using full DNS name due to DNS resolution issues"
          echo "Timestamp: $(date)"

          for i in $(seq 1 30); do
            echo "Attempt $i/30: Testing connection to postgres-prod.n8n-prod.svc.cluster.local:5432"
            if nc -z postgres-prod.n8n-prod.svc.cluster.local 5432; then
              echo "✓ PostgreSQL is ready on postgres-prod.n8n-prod.svc.cluster.local:5432"
              break
            else
              echo "✗ PostgreSQL not ready, waiting..."
              sleep 2
            fi
          done

          if ! nc -z postgres-prod.n8n-prod.svc.cluster.local 5432; then
            echo "ERROR: PostgreSQL not accessible after 30 attempts"
            echo "Checking DNS resolution..."
            nslookup postgres-prod.n8n-prod.svc.cluster.local || echo "Full DNS lookup failed"
            exit 1
          fi

          echo "✓ PostgreSQL connection verified"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
              - ALL
      
      containers:
      - name: n8n
        # Fix PostgreSQL hostname in environment - use full DNS name for reliable resolution
        env:
        - name: DB_POSTGRESDB_HOST
          value: "postgres-prod.n8n-prod.svc.cluster.local"
        - name: DB_POSTGRESDB_PORT
          value: "5432"
      
      # Override affinity to use soft anti-affinity instead of hard requirement
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: workload-type
                operator: In
                values:
                - production
        # Use soft (preferred) instead of hard (required) anti-affinity
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - n8n
              topologyKey: kubernetes.io/hostname
