apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-script
  namespace: n8n
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
data:
  init-n8n-user.sh: |
    #!/bin/bash
    # PostgreSQL initialization script to create n8n database user
    # This script runs once when the database is first initialized

    set -e

    echo "Starting n8n database user initialization..."

    # Check if required environment variables are set
    if [ -n "${POSTGRES_NON_ROOT_USER:-}" ] && [ -n "${POSTGRES_NON_ROOT_PASSWORD:-}" ]; then
      echo "Creating n8n database user: ${POSTGRES_NON_ROOT_USER}"

      # Create the n8n user and grant privileges
      psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        CREATE USER "${POSTGRES_NON_ROOT_USER}" WITH PASSWORD '${POSTGRES_NON_ROOT_PASSWORD}';
        GRANT ALL PRIVILEGES ON DATABASE ${POSTGRES_DB} TO "${POSTGRES_NON_ROOT_USER}";
        GRANT ALL ON SCHEMA public TO "${POSTGRES_NON_ROOT_USER}";
        ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO "${POSTGRES_NON_ROOT_USER}";
        ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO "${POSTGRES_NON_ROOT_USER}";
        ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON FUNCTIONS TO "${POSTGRES_NON_ROOT_USER}";
      EOSQL

      echo "Successfully created n8n database user: ${POSTGRES_NON_ROOT_USER}"
    else
      echo "WARNING: POSTGRES_NON_ROOT_USER or POSTGRES_NON_ROOT_PASSWORD not set"
      echo "Skipping non-root user creation. n8n will use the postgres superuser."
    fi

    echo "Database initialization complete."
